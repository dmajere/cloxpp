var a = 1;
var b = 2;
var c = a + b - 3 * 4 / 5;
print c;


var truthy = true;
var cond;
if (truthy) { cond = "defined"; }
print cond;

var global = "global";
{
    var local = "local";
    print global;
    print local;
}

var counter = 1;
while (counter < 5) {counter = counter + 1; print "while " + counter;}

for (var idx = 0; idx < 3; idx = idx + 1 ) { print "for " + idx;}

fun test() { print "test"; }
test();

fun test2(param) { print "arg " + param;}
test2("parameter");

print clock();

fun outer () {
    var x = "outer";
    fun inner() {
        print x;
    }
    return inner;
}
var out = outer();
out();

var globalGet;
var globalSet;
fun main() {
    var first = "first";
    var second = "second";
    var third = "third";

    fun set(param) { second = param; }

    fun get() {
        print first;
        print second;
        print third;
    }

    globalSet = set;
    globalGet = get;
}
main();

globalGet();
globalSet("updated");
globalGet();

class TestClass {
  testMethod() { print "testMethod call"; }
  thisMethod() { print this; }

  setField(value) { this.field = value; }
  getField() { return this.field; }

} 
print TestClass;
var TestInstance = TestClass();
TestInstance.testField = "testValue";
print TestInstance;
print TestInstance.testField;
TestInstance.testMethod();
TestInstance.thisMethod();
TestInstance.setField("setField");
print TestInstance.getField();